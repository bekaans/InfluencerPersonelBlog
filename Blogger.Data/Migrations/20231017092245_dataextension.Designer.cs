// <auto-generated />
using System;
using Blogger.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Blogger.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231017092245_dataextension")]
    partial class dataextension
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Blog.Entity.Entities.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ImageId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f7b332c7-a519-445c-9487-35ddc990b101"),
                            CategoryId = new Guid("8796b8a7-b7e6-4e55-b72e-7efcc8e8c3bc"),
                            Content = "Konu üzerine alıştırmalar",
                            CreatedBy = "AdminTest",
                            CreatedDate = new DateTime(2023, 10, 17, 12, 22, 44, 925, DateTimeKind.Local).AddTicks(9252),
                            ImageId = new Guid("06227709-06de-407e-abd9-9a61b5281852"),
                            Title = "deneme1",
                            ViewCount = 1,
                            isDeleted = false
                        },
                        new
                        {
                            Id = new Guid("942bd78f-58ba-4344-9dbb-bdf77551c12b"),
                            CategoryId = new Guid("21c3fc25-d3d5-4454-bede-4667d3ffb807"),
                            Content = "Konu üzerine alıştırmalar2",
                            CreatedBy = "AdminTest",
                            CreatedDate = new DateTime(2023, 10, 17, 12, 22, 44, 925, DateTimeKind.Local).AddTicks(9257),
                            ImageId = new Guid("2b50160d-2f34-4b6b-bc3c-ee5fb76bfd0f"),
                            Title = "deneme2",
                            ViewCount = 1,
                            isDeleted = false
                        },
                        new
                        {
                            Id = new Guid("c5dd2b02-5d90-4eea-86cd-930beca60c36"),
                            CategoryId = new Guid("d0e722bd-834d-4e66-a2e2-2865d06e1281"),
                            Content = "Konu üzerine alıştırmalar3",
                            CreatedBy = "AdminTest",
                            CreatedDate = new DateTime(2023, 10, 17, 12, 22, 44, 925, DateTimeKind.Local).AddTicks(9270),
                            ImageId = new Guid("bef41f71-3c3a-4c41-b256-bae6c5cae8dc"),
                            Title = "deneme3",
                            ViewCount = 1,
                            isDeleted = false
                        });
                });

            modelBuilder.Entity("Blog.Entity.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8796b8a7-b7e6-4e55-b72e-7efcc8e8c3bc"),
                            CategoryName = "Spor",
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 10, 17, 12, 22, 44, 925, DateTimeKind.Local).AddTicks(9461),
                            isDeleted = false
                        },
                        new
                        {
                            Id = new Guid("21c3fc25-d3d5-4454-bede-4667d3ffb807"),
                            CategoryName = "Sinema",
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 10, 17, 12, 22, 44, 925, DateTimeKind.Local).AddTicks(9464),
                            isDeleted = false
                        },
                        new
                        {
                            Id = new Guid("d0e722bd-834d-4e66-a2e2-2865d06e1281"),
                            CategoryName = "Tiyatro",
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 10, 17, 12, 22, 44, 925, DateTimeKind.Local).AddTicks(9466),
                            isDeleted = false
                        });
                });

            modelBuilder.Entity("Blog.Entity.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = new Guid("06227709-06de-407e-abd9-9a61b5281852"),
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 10, 17, 12, 22, 44, 925, DateTimeKind.Local).AddTicks(9569),
                            FileName = "images/File1.jpg",
                            FileType = ".jpg",
                            isDeleted = false
                        },
                        new
                        {
                            Id = new Guid("2b50160d-2f34-4b6b-bc3c-ee5fb76bfd0f"),
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 10, 17, 12, 22, 44, 925, DateTimeKind.Local).AddTicks(9572),
                            FileName = "images/File12.jpg",
                            FileType = ".jpg",
                            isDeleted = false
                        },
                        new
                        {
                            Id = new Guid("bef41f71-3c3a-4c41-b256-bae6c5cae8dc"),
                            CreatedBy = "Admin",
                            CreatedDate = new DateTime(2023, 10, 17, 12, 22, 44, 925, DateTimeKind.Local).AddTicks(9575),
                            FileName = "images/File13.jpg",
                            FileType = ".jpg",
                            isDeleted = false
                        });
                });

            modelBuilder.Entity("Blog.Entity.Entities.Article", b =>
                {
                    b.HasOne("Blog.Entity.Entities.Category", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Blog.Entity.Entities.Image", "Image")
                        .WithMany("Articles")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("Blog.Entity.Entities.Category", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("Blog.Entity.Entities.Image", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
